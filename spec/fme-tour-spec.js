// Generated by CoffeeScript 1.10.0
(function() {
  describe('fmeTour', function() {
    beforeEach(inject(function($rootScope, $compile, $localStorage, $injector) {
      this.scope = $rootScope.$new();
      this.injector = $injector;
      this.compile = $compile;
      return this.localStorage = $localStorage;
    }));
    describe('resetAllTours', function() {
      beforeEach(function() {
        this.tourElement = angular.element("<div id='container'><div id='fme_tour' fme-tour='MOCK_TOUR_WITH_BARE_STEPS' fme-autostart='false'></div><div id='fme_tour_thumb_0'></div><div id='fme_tour_info_dog_ear_0'></div><div id='fme_tour_flame_0'><div id='fme_tour_info_dog_ear_0'></div><div id='fme_tour_flame_0'></div>");
        this.compiledTourElement = this.compile(this.tourElement)(this.scope);
        this.tourElement = angular.element("<div id='container'><div id='fme_tour' fme-tour='MOCK_TOUR_WITH_BARE_STEPS' fme-autostart='false'></div><div id='fme_tour_thumb_0'></div><div id='fme_tour_info_dog_ear_0'></div><div id='fme_tour_flame_0'><div id='fme_tour_info_dog_ear_0'></div><div id='fme_tour_flame_0'></div>");
        this.compiledTourElement = this.compile(this.tourElement)(this.scope);
        return this.scope.$digest();
      });
      afterEach(function() {
        return this.tourElement.remove();
      });
      return it('removes tour statuses from local storage', function() {
        var initialStorageSize;
        initialStorageSize = Object.keys(this.localStorage).length;
        this.localStorage['foo-bar'] = 'this should not be removed';
        this.localStorage['bar-foo'] = 'this should not be removed either';
        this.compiledTourElement.find('#fme_tour').isolateScope().nextStep();
        this.compiledTourElement.find('#fme_tour').isolateScope().nextStep();
        this.compiledTourElement.find('#fme_tour').isolateScope().nextStep();
        this.tourElement = angular.element("<div id='container'><div id='fme_tour' fme-tour='MOCK_TOUR_WITH_BARE_STEPS' fme-autostart='false'></div><div id='fme_tour_thumb_0'></div><div id='fme_tour_info_dog_ear_0'></div><div id='fme_tour_flame_0'><div id='fme_tour_info_dog_ear_0'></div><div id='fme_tour_flame_0'></div>");
        this.compiledTourElement = this.compile(this.tourElement)(this.scope);
        this.scope.$digest();
        expect(Object.keys(this.localStorage).length).to.eq(2 + initialStorageSize);
        this.scope.$broadcast('reset-all-fme-tours');
        return expect(Object.keys(this.localStorage).length).to.eq(2 + initialStorageSize - 1);
      });
    });
    context('when the tour has never been started before', function() {
      beforeEach(function() {
        this.tourElement = angular.element("<div id='container'><div id='fme_tour' fme-tour='MOCK_TOUR_WITH_BARE_STEPS' fme-autostart='false'></div><div id='fme_tour_thumb_0'></div><div id='fme_tour_info_dog_ear_0'></div><div id='fme_tour_flame_0'><div id='fme_tour_info_dog_ear_0'></div><div id='fme_tour_flame_0'></div>");
        this.compiledTourElement = this.compile(this.tourElement)(this.scope);
        return this.scope.$digest();
      });
      afterEach(function() {
        return this.tourElement.remove();
      });
      it('does start the tour', function() {
        return expect(this.compiledTourElement.find('#fme_tour_helpers').length).to.eq(1);
      });
      return it('sets the tour localstorage to started', function() {
        return expect(this.localStorage["FME-TOUR-MOCK_TOUR_WITH_BARE_STEPS"]).to.eq('started');
      });
    });
    return context('after the tour starts', function() {
      context('when the step does not have any extra options', function() {
        beforeEach(function() {
          this.tourElementBare = angular.element("<div id='container'><div id='fme_tour' fme-tour='MOCK_TOUR_WITH_BARE_STEPS'></div><div id='fme_tour_thumb_0'></div><div id='fme_tour_info_dog_ear_0'></div><div id='fme_tour_flame_0'><div id='fme_tour_info_dog_ear_0'></div><div id='fme_tour_flame_0'></div>");
          this.compiledTourElement = this.compile(this.tourElementBare)(this.scope);
          return this.scope.$digest();
        });
        afterEach(function() {
          return this.tourElementBare.remove();
        });
        it('sets the tooltip text to the first step\'s tooltip_text option', function() {
          return expect(this.tourElementBare.find('.fme-tour-tooltip').html()).to.equal(this.compiledTourElement.find('#fme_tour').isolateScope().steps[0].tooltip_html);
        });
        it('does not add the fme-tour-step to any elements because there is no selctor option set', function() {
          return expect(this.tourElementBare.find('.fme-tour-step').length).to.eq(0);
        });
        it('sets the positions the tooltip text based on the default placement', function() {
          return expect(this.tourElementBare.find('.fme-tour-tooltip').hasClass('center')).to.be["true"];
        });
        return it('sets the position the tooltip  based on the default placement', function() {
          return expect(this.tourElementBare.find('.fme-tooltip-reference-layer').attr('style')).to.equal('top:25%; left: 0;');
        });
      });
      context('when the step has extra options', function() {
        beforeEach(function() {
          this.tourElementWithOptions = angular.element("<html><body><div id='container'><div id='fme_tour' fme-tour='MOCK_TOUR_WITH_COMPLEX_STEPS'></div><div id='fme_tour_thumb_0'>test</div><div id='fme_tour_info_dog_ear_0'></div><div id='fme_tour_flame_0'><div id='fme_tour_info_dog_ear_0'></div><div id='fme_tour_flame_0'></div></div></body></html>");
          this.compiledTourElementWithOptions = this.compile(this.tourElementWithOptions)(this.scope);
          return this.scope.$digest();
        });
        afterEach(function() {
          return this.tourElementWithOptions.remove();
        });
        it('sets the background class of the tooltip based on the background option', function() {
          return expect(this.tourElementWithOptions.find('.fme-tour-step').hasClass("" + (this.compiledTourElementWithOptions.find('#fme_tour').isolateScope().steps[0].background))).to.be["true"];
        });
        it('sets the tooltip text to the first step\'s tooltip_text option', function() {
          return expect(this.tourElementWithOptions.find('.fme-tour-tooltip').html()).to.equal(this.compiledTourElementWithOptions.find('#fme_tour').isolateScope().steps[0].tooltip_html);
        });
        it('adds the fme-tour-step class to the item based on the selector option', function() {
          return expect(this.tourElementWithOptions.find('.fme-tour-step').length).to.eq(1);
        });
        it('sets the positions the tooltip text based on the  tooltip_placement option', function() {
          return expect(this.tourElementWithOptions.find('.fme-tour-tooltip').hasClass('bottom')).to.be["true"];
        });
        return it('sets the position of the tooltip based on the tooltip_placement option', function() {
          return expect(this.tourElementWithOptions.find('.fme-tooltip-reference-layer').attr('style')).to.equal('top:30px; left: 0;');
        });
      });
      context('when the tour moves to the next step and does have extra options', function() {
        beforeEach(function() {
          this.tourElementWithOptions = angular.element("<html><body><div id='container'><div id='fme_tour' fme-tour='MOCK_TOUR_WITH_COMPLEX_STEPS'></div><div id='fme_tour_thumb_0'></div><div id='fme_tour_info_dog_ear_0'></div><div id='fme_tour_flame_0'><div id='fme_tour_info_dog_ear_0'></div><div id='fme_tour_flame_0'></div></div></body></html>");
          this.compiledTourElementWithOptions = this.compile(this.tourElementWithOptions)(this.scope);
          this.scope.$digest();
          return this.tourElementWithOptions.find('#fme_tour_helpers').triggerHandler('click');
        });
        afterEach(function() {
          this.scope.mock_stepsWithOptions = {};
          return this.tourElementWithOptions.remove();
        });
        it('sets the background class of the tooltip based on the background option', function() {
          return expect(this.tourElementWithOptions.find('.fme-tour-step').hasClass("" + (this.compiledTourElementWithOptions.find('#fme_tour').isolateScope().steps[1].background))).to.be["true"];
        });
        it('sets the tooltip text to the first step\'s tooltip_text option', function() {
          return expect(this.tourElementWithOptions.find('.fme-tour-tooltip').html()).to.equal(this.compiledTourElementWithOptions.find('#fme_tour').isolateScope().steps[1].tooltip_html);
        });
        it('adds the fme-tour-step class to the item and its clone based on the selector option', function() {
          return expect(this.tourElementWithOptions.find('.fme-tour-step').length).to.eq(3);
        });
        it('sets the positions the tooltip text based on the  tooltip_placement option', function() {
          return expect(this.tourElementWithOptions.find('.fme-tour-tooltip').hasClass(this.compiledTourElementWithOptions.find('#fme_tour').isolateScope().steps[1].tooltip_placement)).to.be["true"];
        });
        return it('sets the position of the tooltip based on the tooltip_placement option', function() {
          return expect(this.tourElementWithOptions.find('.fme-tooltip-reference-layer').attr('style')).to.equal('top:-10px; left: 0;');
        });
      });
      return context('when the tour ends', function() {
        beforeEach(function() {
          this.tourElementWithOptions = angular.element("<html><body><div id='container'><div id='fme_tour' fme-tour='MOCK_TOUR_WITH_COMPLEX_STEPS'></div><div id='fme_tour_thumb_0'></div><div id='fme_tour_info_dog_ear_0'></div><div id='fme_tour_flame_0'><div id='fme_tour_info_dog_ear_0'></div><div id='fme_tour_flame_0'></div></div></body></html>");
          this.compiledTourElementWithOptions = this.compile(this.tourElementWithOptions)(this.scope);
          this.scope.$digest();
          this.compiledTourElementWithOptions.find('#fme_tour').isolateScope().nextStep();
          this.compiledTourElementWithOptions.find('#fme_tour').isolateScope().nextStep();
          return this.compiledTourElementWithOptions.find('#fme_tour').isolateScope().nextStep();
        });
        afterEach(function() {
          return this.tourElementWithOptions.remove();
        });
        it('removes the ends the tour', function() {
          return expect(this.compiledTourElementWithOptions.find('#fme_tour_helpers').length).to.eq(0);
        });
        return it('marks the tour as complete in localstorage', function() {
          return expect(this.localStorage["FME-TOUR-MOCK_TOUR_WITH_COMPLEX_STEPS"]).to.eq('finished');
        });
      });
    });
  });

}).call(this);
